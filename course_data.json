{
  "course_name": "The Ultimate Guide to Rust Programming - Learn Interactively",
  "course_overview": "Rust is quickly becoming one of the most popular languages. With a strong basis as a systems and embedded language, its clean design and ergonomics makes it an emerging choice for general purpose programming tasks as well. This course will be your guide to the fundamentals of programming and Rust. Whether you have no experience or want to learn a new language, this is the place to start.\n\nIn this course, you’ll start off with the basics of the Rust programming language, learning the syntax, the philosophy of the language, and the anatomy of Rust. With that in hand, you’ll move onto some of the more unique parts of Rust, such as expression-oriented programming, ownership, and its strong type system.\n\nIn the latter half of the course, you’ll work through some of the core components of Rust such as references, memory management, mutability, traits, slices, and generics.\n\nBy the time you finish, you’ll have the foundations in place to learn more advanced concepts and take your Rust programming to the next level.",
  "course_folder": "the ultimate guide to rust programming",
  "course_lessons": [
    "0-introduction",
    "1-instructions",
    "2-hello world",
    "3-what does that mean",
    "4-interpolation",
    "5-variables",
    "6-more math",
    "7-multiple variables and shadowing",
    "8-types",
    "9-summary",
    "10-exercises",
    "11-introduction",
    "12-pairing and nesting",
    "13-layout",
    "14-comments",
    "15-expressions values and types",
    "16-variables again",
    "17-effects versus results",
    "18-blocks and statements",
    "19-summary",
    "20-exercises",
    "21-hello world again",
    "22-function parameters",
    "23-function results",
    "24-multiple parameters",
    "25-variable and parameter scope",
    "26-anatomy of a function",
    "27-calling functions",
    "28-is main special",
    "29-summary",
    "30-exercises",
    "31-equality",
    "32-assertions",
    "33-comparison operators",
    "34-functions returning booleans",
    "35-the not operator",
    "36-not ing other comparison operators",
    "37-and or",
    "38-summary",
    "39-exercises",
    "40-hello if",
    "41-a note on semicolons",
    "42-else",
    "43-else if",
    "44-evaluating to values",
    "45-factorial and recursion",
    "46-summary",
    "47-exercises",
    "48-while expressions loops",
    "49-failed attempt shadowing",
    "50-almost correct assignment",
    "51-more than once",
    "52-counting",
    "53-sum",
    "54-nested loops",
    "55-mutation and shadowing",
    "56-let without assignment",
    "57-summary",
    "58-exercises",
    "59-all this fruit",
    "60-struct",
    "61-call another function",
    "62-ownership and moving",
    "63-copy values",
    "64-make a copy",
    "65-move out",
    "66-increasing fruit",
    "67-upper and lower case",
    "68-summary",
    "69-exercises",
    "70-borrow",
    "71-mutable references",
    "72-what s in a reference",
    "73-deref",
    "74-lifetimes of references",
    "75-mutating and borrowing",
    "76-multiple references",
    "77-single mutable reference",
    "78-mutable to immutable",
    "79-summary",
    "80-exercises",
    "81-hello method calls",
    "82-type inference",
    "83-side note underscores in numbers",
    "84-negative numbers are annoying",
    "85-hello method implementations",
    "86-methods by reference",
    "87-static methods",
    "88-the self type",
    "89-method call chaining",
    "90-summary",
    "91-exercises",
    "92-bits bytes and memory",
    "93-dynamically sized types",
    "94-program memory",
    "95-lifetimes of string literals",
    "96-owned strings",
    "97-the type of owned strings",
    "98-moving strings",
    "99-borrowing a string",
    "100-a better person",
    "101-the format macro",
    "102-freeing",
    "103-summary",
    "104-exercises",
    "105-arrays",
    "106-indexing",
    "107-slices",
    "108-the relation to string slices",
    "109-vec",
    "110-slicing a slice",
    "111-summary",
    "112-exercises",
    "113-parameterized structs",
    "114-parameterized functions",
    "115-parameterized impl blocks",
    "116-turbofish",
    "117-summary",
    "118-exercises",
    "119-double double",
    "120-trait bounds",
    "121-parameterized fruit",
    "122-display",
    "123-clone and derive",
    "124-copy and marker traits",
    "125-debug",
    "126-partial equal partial order",
    "127-using traits from std",
    "128-multiple bounds",
    "129-associated types",
    "130-summary",
    "131-exercises",
    "132-get me a job",
    "133-using variants",
    "134-pattern matching",
    "135-commas and braces",
    "136-more teachers"
  ],
  "repo_name": "vacuous-bird"
}
